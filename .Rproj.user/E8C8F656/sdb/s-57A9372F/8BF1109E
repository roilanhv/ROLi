{
    "collab_server" : "",
    "contents" : "## Global options\noptions(max.print=\"75\")\nopts_chunk$set(echo=FALSE,\ncache=TRUE,\nprompt=FALSE,\ntidy=FALSE,\ncomment=NA,\nmessage=FALSE,\nwarning=FALSE)\nopts_knit$set(width=100)\n# Carregando pacotes\npacotes <- c(\"openair\", \"longwaveR\",\"magrittr\",\"dplyr\",\"hydroGOF\",\"readr\",\"knitr\", \"tidyr\",\n\"lattice\",\"latticeExtra\", \"ggplot2\",\"xts\",\"dygraphs\",\"RcppRoll\", \"lubridate\",\n\"DT\", \"scales\")\nsapply(pacotes, require,character.only = TRUE, quietly = TRUE)\nsetwd(\"~/A_DOUTORADO/TRABALHOS/ARTIGO_LONGWAVER_SM/\")\nDA_LIN <-\nread_rds(\"DADOS/SM_LIN.rds\") %>%  #\nmutate(date = date - 30*60) %>%   # diminuindo 30 min\nselect(-Cover) %>%\nmutate(dt = format(date,\"%Y-%m-%d %H\")) %>%\nselect(-date) %>%\ngroup_by(dt) %>%\nsummarise_each(funs(mean(.,na.rm = T))) %>%\nmutate(date = as.POSIXct(dt,format = \"%Y-%m-%d %H\",tz = \"GMT\"), dt = NULL) %>%\n## Suavisando na troca do dia.\nmutate(K = ifelse(is.na(K_mean),\nNA,\nrollmean(K_mean[!is.na(K_mean)],k = 6,fill = mean(K_mean[!is.na(K_mean)]),\nalign = \"center\",na.pad = TRUE))) %>%\n## Limiares para definir tipo de cobertura do ceu.\nmutate(Cover = ifelse(K_mean > 0.65, \"CC\", \"CPN\")) %>%\nmutate(Cover = ifelse(K_mean < 0.3 , \"CN\",Cover)) %>%\nmutate(Cover = factor(Cover, levels = c(\"CC\",\"CPN\",\"CN\") )) %>%\n## Considerando s'o ano 2014\nselectByDate(year = 2014) %T>%\nsummaryPlot(names(.)[2:9])\n# Quantidade de dias para cada faixa.\ntable(DA_LIN$Cover)/24\nsem.params <- get.AllSchems(data = DA_LIN,method = \"non-linear\")\nrequire(longwaveR)\nDA_LIN\nsem.params <- get.AllSchems(data = DA_LIN, method = \"non-linear\")\nget.AllSchems\nfix(get.Li)\nget.Li(data_ = DA_LIN,E_fun = \"EAN\",C_fun = \"-\")\nget.Li(data_ = DA_LIN,E_fun = \"EAN\",C_fun = \"-\")\nDA_LIN\nsem.params <- get.AllSchems(data = DA_LIN, method = \"non-linear\")\nsem.params <- get.AllSchems(data = DA_LIN)\nlibrary(longwaveR)\npacotes <- c(\"openair\", \"longwaveR\",\"magrittr\",\"dplyr\",\"hydroGOF\",\"readr\",\"knitr\", \"tidyr\",\n\"lattice\",\"latticeExtra\", \"ggplot2\",\"xts\",\"dygraphs\",\"RcppRoll\", \"lubridate\",\n\"DT\", \"scales\")\nsapply(pacotes, require,character.only = TRUE, quietly = TRUE)\nsetwd(\"~/A_DOUTORADO/TRABALHOS/ARTIGO_LONGWAVER_SM/\")\nDA_LIN <-\nread_rds(\"DADOS/SM_LIN.rds\") %>%  #\nmutate(date = date - 30*60) %>%   # diminuindo 30 min\nselect(-Cover) %>%\nmutate(dt = format(date,\"%Y-%m-%d %H\")) %>%\nselect(-date) %>%\ngroup_by(dt) %>%\nsummarise_each(funs(mean(.,na.rm = T))) %>%\nmutate(date = as.POSIXct(dt,format = \"%Y-%m-%d %H\",tz = \"GMT\"), dt = NULL) %>%\n## Suavisando na troca do dia.\nmutate(K = ifelse(is.na(K_mean),\nNA,\nrollmean(K_mean[!is.na(K_mean)],k = 6,fill = mean(K_mean[!is.na(K_mean)]),\nalign = \"center\",na.pad = TRUE))) %>%\n## Limiares para definir tipo de cobertura do ceu.\nmutate(Cover = ifelse(K_mean > 0.65, \"CC\", \"CPN\")) %>%\nmutate(Cover = ifelse(K_mean < 0.3 , \"CN\",Cover)) %>%\nmutate(Cover = factor(Cover, levels = c(\"CC\",\"CPN\",\"CN\") )) %>%\n## Considerando s'o ano 2014\nselectByDate(year = 2014) %T>%\nsummaryPlot(names(.)[2:9])\ntable(DA_LIN$Cover)/24\nsem.params <- get.AllSchems(data = DA_LIN)\ndata = DA_LIN\nteste <- get.Li(data_ = DA_LIN,E_fun = \"EAN\",C_fun = \"-\",method = \"non-linear\")\nteste\ndata_ = DA_LIN\nE_fun = \"EAN\"\nC_fun = \"-\"\nmethod = \"non-linear\"\nadjust = FALSE\nnsample = 1000\nmax_iter = 10\nstats = \"rmse\"\nlog_file = NULL\nsigma <- 5.67051*10^(-8) # W m^(-2) T^(-4)\nemis_ <- try( do.call(E_fun,list(data=data_, func = C_fun)), silent = TRUE)\nemis_\nif(adjust){\nmessage(\"      Making adjusting.\")\nif( method[1] == \"non-linear\" ){\nmessage(\"           Non-Linear Adjusting\")\nemis_ <- try( do.call(E_fun,list(data=data_, func = C_fun, adjust = adjust)),\nsilent = TRUE)\n} else if ( method[1] == \"montecarlo\" ){\nmessage(\"           MonteCarlo Adjusting\")\nemis_ <- do.call(E_fun,list(data=data_,\nfunc = C_fun,\nadjust = adjust,\nnsample = nsample,\nmethod = \"montecarlo\",\nmax_iter = max_iter,\nstats = stats))\n}\nif(class(emis_) == \"try-error\" & !is.na(method[2] == \"montecarlo\") ){\nmessage(\"           Error in NLS, passing to MonteCarlo approach >\")\nemis_ <- do.call(E_fun,list(data=data_,\nfunc = C_fun,\nadjust = adjust,\nnsample = nsample,\nmethod = \"montecarlo\",\nmax_iter = max_iter,\nstats = stats))\n}\n} else {\nemis_ <- try( do.call(E_fun,list(data=data_, func = C_fun)), silent = TRUE)\n}\nclass(emis_)\nwith(data_, emis_$emiss*sigma*Ta^4)\nemis_\nroli_est <-  with(data_, emis_*sigma*Ta^4)\nroli_est\nteste <- get.Li(data_ = DA_LIN,E_fun = \"EAN\",C_fun = \"-\",method = \"non-linear\")\nlibrary(longwaveR)\nteste\nteste <- get.Li(data_ = DA_LIN,E_fun = \"EAN\",C_fun = \"-\",method = \"non-linear\")\nteste\nget.Li(data_ = DA_LIN,E_fun = \"EAN\",C_fun = \"-\",method = \"non-linear\")\nsem.params <- get.AllSchems(data = DA_LIN)\nsem.params\nsem.params$EAN\nsem.params$EAN\nsem.params\nhead(sem.params)\nteste %>% head()\nteste %>% head()\nteste %>% str()\nwith(data_, emis_*sigma*Ta^4)\nteste %>% class()\nsem.params\nsem.params %>% str()\nsem.params$EAN\noptions(max.print=\"105\")\nsem.params\nsem.params <- get.AllSchems(data = DA_LIN)\nsem.params %<>% mutate(ID = \"NaoADJ\")\nNao.ADJ.params <- left_join(DA_LIN %>%\nselect(date,Li,Ta,es,Cover,Rg,Rpot),\nsem.params,\nby = \"date\")\nNao.ADJ.params\nlibrary(longwaveR)\nsem.params <- get.AllSchems(data = DA_LIN)\nsem.params %<>% mutate(ID = \"NaoADJ\")\nNao.ADJ.params <- left_join(DA_LIN %>%\nselect(date,Li,Ta,es,Cover,Rg,Rpot),\nsem.params,\nby = \"date\")\najusted.params <-\n# lapply(unique(DA_LIN$Cover[!is.na(DA_LIN$Cover)]) %>% as.vector, function(i){\n#     # i = \"ALL\"\nDA_LIN %>%\nfilter(Cover == i) %>%\nget.AllSchems(data = .,adjust = TRUE)\n## O ajuste sendo feito por cada tipo de dia\najusted.params <-\n# lapply(unique(DA_LIN$Cover[!is.na(DA_LIN$Cover)]) %>% as.vector, function(i){\n#     # i = \"ALL\"\nDA_LIN %>%\n# filter(Cover == i) %>%\nget.AllSchems(data = .,adjust = TRUE)\nlibrary(longwaveR)\najusted.params <-\n# lapply(unique(DA_LIN$Cover[!is.na(DA_LIN$Cover)]) %>% as.vector, function(i){\n#     # i = \"ALL\"\nDA_LIN %>%\n# filter(Cover == i) %>%\nget.AllSchems(data = .,adjust = TRUE)\n#\n# }) %>%\najusted.params\najusted.params %<>% mutate(ID = \"ADJ\")\nADJ.params <- left_join(DA_LIN %>% select(date,Li,Ta,es,Cover,Rg,Rpot) ,\najusted.params,\nby = \"date\")\nLI_DA_ALL <- bind_rows(Nao.ADJ.params,ADJ.params) %>%\nmutate(ID = factor(ID, level = c(\"NaoADJ\",\"ADJ\")))\nLI_DA_ALL\nLI_DA_ALL %>% head()\n(stats.all.schemes.COVER <-\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot) %>%\nsplit_stats(split_class = c(\"Cover\",\"ID\")) %>%\nfilter(PNAs < 10)) %>%\ngroup_by(Cover) %>%\nfilter(RMSE <= quantile(RMSE,probs = 0.05, na.rm = TRUE, names = FALSE))  %>%\nungroup()\ntable.result.LI_DA_ALL.sly<-\n(stats.all.schemes.COVER <-\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot) %>%\nsplit_stats(split_class = c(\"Cover\",\"ID\")) %>%\nfilter(PNAs < 10)) %>%\ngroup_by(Cover) %>%\nfilter(RMSE <= quantile(RMSE,probs = 0.05, na.rm = TRUE, names = FALSE))  %>%\nungroup()\ntable.result.LI_DA_ALL.sly\nstats.all.schemes.COVER\ntable.result.LI_DA_ALL.sly %>%\nmutate(PNAs = round(PNAs,2)) %>%\ndatatable()\ntable.result.LI_DA_ALL.sly %>%\nmutate(PNAs = round(PNAs,2))\ntable.result.LI_DA_ALL.sly %>%\nmutate(PNAs = round(PNAs,2))\ntable.result.LI_DA_ALL.sly\nLI_DA_ALL\nLI_DA_ALL$ID\nLI_DA_ALL %>%\nrename(Obs = Li)\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot)\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, - Cover)\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, - Cover) %>%\ngather(Esquema,sim, -date,-Obs)\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID)\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs)\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>%\nseparate(Esquema, c(\"EMISS\",\"CLOUD\"))\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>%\nseparate(Esquema, c(\"EMISS\",\"CLOUD\")) %>%\nfilter(is.na(CLOUD))\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>%\nseparate(Esquema, c(\"EMISS\",\"CLOUD\")) %>%\nfilter(is.na(CLOUD)) %>%\nspread(sim, EMISS)\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>%\nseparate(Esquema, c(\"EMISS\",\"CLOUD\")) %>%\nfilter(is.na(CLOUD)) %>%\nspread(EMISS, sim )\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>%\nseparate(Esquema, c(\"EMISS\",\"CLOUD\"))\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs)\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>%\nseparate(Esquema, c(\"EMISS\",\"CLOUD\"))\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>%\nseparate(Esquema, c(\"EMISS\",\"CLOUD\"),sep = \"_\")\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>%\nfilter(substr(start = 4,4) != \"_\")\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>%\nfilter(substr(Esuqema,start = 4,stop = 4) != \"_\")\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>%\nfilter(substr(Esquema,start = 4,stop = 4) != \"_\")\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>%\nfilter(substr(Esquema,start = 4,stop = 4) != \"_\") %>%\nspread(Esquema, sim)\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>%\nfilter(substr(Esquema,start = 4,stop = 4) != \"_\") %>%\nspread(sim,Esquema)\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(-Ta,-es,-Rg,-Rpot, -Cover, -ID) %>%\ngather(Esquema,sim, -date,-Obs) %>% names()\nLI_DA_ALL %>%\nrename(Obs = Li) %>% names()\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(starts_with(\"E\", ignore.case = FALSE)) %>% names()\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\", ignore.case = FALSE)) %>% names()\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\", ignore.case = FALSE)) %>%\ngather(Esquema,sim,-Obs)\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\", ignore.case = FALSE)) %>%\ngather(Esquema,sim,-Obs) %>%\nfilter(substr(Esquema,start = 4,stop = 4) != \"_\")\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\", ignore.case = FALSE)) %>%\ngather(Esquema,sim,-Obs) %>%\nfilter(substr(Esquema,start = 4,stop = 4) != \"_\") %>%\nspread(sim,Esquema)\nLI_DA_ALL %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\", ignore.case = FALSE)) %>%\ngather(Esquema,sim,-Obs) %>%\nfilter(substr(Esquema,start = 4,stop = 4) != \"_\") %>%\nspread(Esquema, sim)\nLI_DA_ALL %>% class()\nLI_DA_ALL %>% as.tbl() %>% class()\nLI_DA_ALL %>% as.data.frame() %>% class()\nLI_DA_ALL %>%\nas.data.frame() %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\", ignore.case = FALSE)) %>%\ngather(Esquema,sim,-Obs) %>%\nfilter(substr(Esquema,start = 4,stop = 4) != \"_\") %>%\nspread(Esquema, sim)\nLI_DA_ALL %>%\nas.data.frame() %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\", ignore.case = FALSE)) %>%\ngather(Esquema,sim,-Obs) %>%\nfilter(substr(Esquema,start = 4,stop = 4) != \"_\") %>%\nspread(sim,Esquema )\nLI_DA_ALL %>%\nas.data.frame() %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\", ignore.case = FALSE)) %>%\ngather(Esquema,sim,-Obs) %>%\nfilter(substr(Esquema,start = 4,stop = 4) != \"_\") %>%\n# spread(sim,Esquema ) %>%\nsplit_stats(split_class = c(\"Esquema\"))\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\")\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li)\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\", ignore.case = FALSE)) %>%\ngather(Esquema,sim,-Obs) %>%\nfilter(substr(Esquema,start = 4,stop = 4) != \"_\") %>%\nspread(sim,Esquema )\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\", ignore.case = FALSE)) %>%\ngather(Esquema,sim,-Obs) %>%\nfilter(substr(Esquema,start = 4,stop = 4) != \"_\") %>%\nspread(Esquema, sim )\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\", ignore.case = FALSE))\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(-contains(\"_\"),starts_with(\"E\",ignore.case = FALSE),Obs)\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(starts_with(\"E\",ignore.case = FALSE),Obs)\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\",ignore.case = FALSE))\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))  %>%\nsplit_stats(split_class = NULL)\nsplit_stats\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(Obs,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))  %>%\nsplit_stats(split_class = \"\")\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(date,Obs,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(date,Obs,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))  %>%\nsplit_stats(split_class = \"\")\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(date,Obs,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(date,Obs,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))  %>%\nsplit_stats(split_class = \"\")\nsplit_stats\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(date,Obs,ID,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(date,Obs,ID,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))  %>%\nsplit_stats(split_class = \"ID\")\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(date,Obs,ID,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))  %>%\nsplit_stats(split_class = \"ID\")\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(date,Obs,ID,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))  %>%\nsplit_stats(split_class = \"ID\") %>%\nselect(params,RMSE,PBIAS,R2)\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(date,Obs,ID,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))  %>%\nsplit_stats(split_class = \"ID\") %>%\nselect(params,RMSE,PBIAS,R2) %>%\nwrite.csv(file = \"../ARTIGO_LONGWAVER_SM/estatistica_coef_originais.txt\",sep = \" \")\nLI_DA_ALL %>%\nas.data.frame() %>%\nfilter(ID == \"NaoADJ\") %>%\nrename(Obs = Li) %>%\nselect(date,Obs,ID,starts_with(\"E\",ignore.case = FALSE)) %>%\nselect(-contains(\"_\"))  %>%\nsplit_stats(split_class = \"ID\") %>%\nselect(params,RMSE,PBIAS,R2) %>%\nwrite.csv(file = \"../ARTIGO_LONGWAVER_SM/estatistica_coef_originais.txt\")\nlibrary(longwaveR)\n",
    "created" : 1486036257569.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2891846417",
    "id" : "8BF1109E",
    "lastKnownWriteTime" : 1485978687,
    "last_content_update" : 1485978687,
    "path" : "~/A_DOUTORADO/CODE_WORK/OnGitHub_ROLi/ROLi/.Rhistory",
    "project_path" : ".Rhistory",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_history"
}